/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { AdboioApi } from "../../../..";
import express from "express";
import * as serializers from "../../../../serialization";
export interface BoxServiceMethods {
    createBox(req: express.Request<never, AdboioApi.BoxId, AdboioApi.CreateBoxRequest, never>, res: {
        send: (responseBody: AdboioApi.BoxId) => Promise<void>;
    }): void | Promise<void>;
    getBox(req: express.Request<{
        id: serializers.BoxId.Raw;
    }, AdboioApi.Box, never, never>, res: {
        send: (responseBody: AdboioApi.Box) => Promise<void>;
    }): void | Promise<void>;
}
export declare class BoxService {
    private readonly methods;
    private router;
    constructor(methods: BoxServiceMethods, middleware?: express.RequestHandler[]);
    addMiddleware(handler: express.RequestHandler): this;
    toRouter(): express.Router;
}
